{"ast":null,"code":"var _jsxFileName = \"/Users/antoniocaballes/Library/CloudStorage/OneDrive-Personal/Documents/myReact/lib/order/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingItemIndex];\n    let updatedItems;\n    if (existingItem) {\n      let updatedItem;\n      updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = [...state.items.concat(action.item)];\n    }\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    console.log(existingItem);\n    const newTotalAmount = state.totalAmount - existingItem.price;\n\n    // let updatedItems;\n\n    // if (existingItem.amount === 1) {\n    //   updatedItems = state.items.filter((item) => item.id !== action.id);\n    // } else {\n    //   const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n    //   updatedItems = [...state.items];\n    //   updatedItems[existingItemIndex] = updatedItem;\n    // }\n\n    // return {\n    //   items: updatedItems,\n    //   totalAmount: newTotalAmount,\n    // };\n  }\n\n  return defaultCartState;\n};\nfunction CartProvider(props) {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","item","price","amount","existingItemIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","console","log","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/antoniocaballes/Library/CloudStorage/OneDrive-Personal/Documents/myReact/lib/order/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingItem = state.items[existingItemIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      let updatedItem;\n      updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = [...state.items.concat(action.item)];\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingItemIndex];\n    console.log(existingItem);\n    const newTotalAmount = state.totalAmount - existingItem.price;\n\n    // let updatedItems;\n\n    // if (existingItem.amount === 1) {\n    //   updatedItems = state.items.filter((item) => item.id !== action.id);\n    // } else {\n    //   const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n    //   updatedItems = [...state.items];\n    //   updatedItems[existingItemIndex] = updatedItem;\n    // }\n\n    // return {\n    //   items: updatedItems,\n    //   totalAmount: newTotalAmount,\n    // };\n  }\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemToCartHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}